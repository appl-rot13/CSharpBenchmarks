name: Build/Test

on:
  push:
    branches: [ main ]

jobs:
  find-solutions:
    runs-on: ubuntu-latest
    outputs:
      solutions: ${{ steps.get-affected-solution-files.outputs.solutions }}

    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Get changed files
      id: get-changed-files
      uses: tj-actions/changed-files@v45
      with:
        since_last_remote_commit: true

    - name: Get affected solution files
      id: get-affected-solution-files
      env:
        CHANGED_FILES: ${{ steps.get-changed-files.outputs.all_changed_files }}
      run: |
        find_all_solution_files() {
          find . -type f -name "*.sln"
        }

        find_affected_solution_files() {
          find_all_solution_files | while IFS= read -r solution_file; do
            solution_dir=$(dirname "$solution_file")
            for changed_file in ${CHANGED_FILES}; do
              if [[ "./$changed_file" == "$solution_dir"* ]]; then
                echo "$solution_file"
                break
              fi
            done
          done
        }

        echo "Changed files:"
        workflow_file_changed="false"
        for changed_file in ${CHANGED_FILES}; do
          echo "./$changed_file"
          if [[ "./$changed_file" == "./.github/workflows/"* ]]; then
            workflow_file_changed="true"
          fi
        done
        echo ""

        echo "Affected solution files:"
        if [[ "$workflow_file_changed" == "true" ]]; then
          affected_solution_files=$(find_all_solution_files)
        else
          affected_solution_files=$(find_affected_solution_files)
        fi
        echo "$affected_solution_files"

        if [[ -n "$affected_solution_files" ]]; then
          solutions_as_json=$(echo "$affected_solution_files" | jq -R -s -c 'split("\n")[:-1]')
          echo "solutions=${solutions_as_json}" >> "${GITHUB_OUTPUT}"
        fi

  build-and-test:
    runs-on: ubuntu-latest
    needs: find-solutions
    if: ${{ needs.find-solutions.outputs.solutions != '' && needs.find-solutions.outputs.solutions != '[]' }}
    strategy:
      fail-fast: false
      matrix:
        solution: ${{ fromJSON(needs.find-solutions.outputs.solutions) }}

    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Setup
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: |
          8.0.x
          9.0.x

    - name: Restore dependencies
      run: dotnet restore ${{ matrix.solution }}

    - name: Build
      run: dotnet build ${{ matrix.solution }} --no-restore

    - name: Test
      run: dotnet test ${{ matrix.solution }} --no-build --verbosity normal
